{"version":3,"file":"component---src-pages-features-jsx-f6a39173af0bbe26bd68.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__Done24Pxsvg2.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicBullet.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicBullet.module.css","webpack://gatsby-starter-default/./src/components/Bullet.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__Sphere.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicHomeCta.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicHomeCta.module.css","webpack://gatsby-starter-default/./src/components/HomeCta.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicFeatures.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicFeatures.module.css","webpack://gatsby-starter-default/./src/pages/features.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/images/simpleProject.png"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Done24Pxsvg2Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path d={\"M0 0h24v24H0z\"} fill={\"none\"}></path>\n\n      <path d={\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"}></path>\n    </svg>\n  )\n}\n\nexport default Done24Pxsvg2Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: qsjy1QNDN9YtWHkz6hQyNv\n// Component: Xz3qZuX73tHZGy\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as plasmic_library_plasmic_color_type_css from \"../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css\" // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: qsjy1QNDN9YtWHkz6hQyNv/projectcss\nimport * as sty from \"./PlasmicBullet.module.css\" // plasmic-import: Xz3qZuX73tHZGy/css\nimport Done24Pxsvg2Icon from \"./icons/PlasmicIcon__Done24Pxsvg2\" // plasmic-import: 2WoEWFJ01mv-QA/icon\n\nexport const PlasmicBullet__VariantProps = new Array()\n\nexport const PlasmicBullet__ArgProps = new Array(\"children\")\n\nfunction PlasmicBullet__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        plasmic_library_plasmic_color_type_css.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <Done24Pxsvg2Icon\n        data-plasmic-name={\"svg\"}\n        data-plasmic-override={overrides.svg}\n        className={classNames(projectcss.all, sty.svg)}\n        role={\"img\"}\n      />\n\n      {p.renderPlasmicSlot({\n        defaultContents: \"Lorem ipsum dolor velit\",\n        value: args.children,\n      })}\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"svg\"],\n  svg: [\"svg\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicBullet__ArgProps,\n      internalVariantPropNames: PlasmicBullet__VariantProps,\n    })\n\n    return PlasmicBullet__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicBullet\"\n  } else {\n    func.displayName = `PlasmicBullet.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicBullet = Object.assign(\n  // Top-level PlasmicBullet renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    svg: makeNodeComponent(\"svg\"),\n    // Metadata about props expected for PlasmicBullet\n    internalVariantProps: PlasmicBullet__VariantProps,\n    internalArgProps: PlasmicBullet__ArgProps,\n  }\n)\n\nexport default PlasmicBullet\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicBullet-module--root--CCK4n\";\nexport var svg = \"PlasmicBullet-module--svg--EzJWU\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicBullet } from \"./plasmic/simple_light_landing_page/PlasmicBullet\"\n\nfunction Bullet_(props, ref) {\n  // Use PlasmicBullet to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicBullet are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all BulletProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicBullet root={{ ref }} {...props} />\n}\n\nconst Bullet = React.forwardRef(Bullet_)\n\nexport default Bullet\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function SphereIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 428 328\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <defs>\n        <radialGradient\n          cx={\"35.542%\"}\n          cy={\"34.553%\"}\n          fx={\"35.542%\"}\n          fy={\"34.553%\"}\n          r={\"96.031%\"}\n          id={\"FftVK5nZ1a\"}\n        >\n          <stop stopColor={\"#DFDFDF\"} offset={\"0%\"}></stop>\n\n          <stop stopColor={\"#4C4C4C\"} offset={\"44.317%\"}></stop>\n\n          <stop stopColor={\"#333\"} offset={\"100%\"}></stop>\n        </radialGradient>\n      </defs>\n\n      <g fill={\"none\"} fillRule={\"evenodd\"}>\n        <g fill={\"#FFF\"}>\n          <ellipse\n            fillOpacity={\".04\"}\n            cx={\"185\"}\n            cy={\"15.576\"}\n            rx={\"16\"}\n            ry={\"15.576\"}\n          ></ellipse>\n\n          <ellipse\n            fillOpacity={\".24\"}\n            cx={\"100\"}\n            cy={\"68.402\"}\n            rx={\"24\"}\n            ry={\"23.364\"}\n          ></ellipse>\n\n          <ellipse\n            fillOpacity={\".12\"}\n            cx={\"29\"}\n            cy={\"251.231\"}\n            rx={\"29\"}\n            ry={\"28.231\"}\n          ></ellipse>\n\n          <ellipse\n            fillOpacity={\".64\"}\n            cx={\"29\"}\n            cy={\"251.231\"}\n            rx={\"8\"}\n            ry={\"7.788\"}\n          ></ellipse>\n\n          <ellipse\n            fillOpacity={\".12\"}\n            cx={\"342\"}\n            cy={\"31.303\"}\n            rx={\"8\"}\n            ry={\"7.788\"}\n          ></ellipse>\n\n          <ellipse\n            fillOpacity={\".48\"}\n            cx={\"62\"}\n            cy={\"126.811\"}\n            rx={\"2\"}\n            ry={\"1.947\"}\n          ></ellipse>\n\n          <ellipse\n            fillOpacity={\".12\"}\n            cx={\"78\"}\n            cy={\"7.072\"}\n            rx={\"2\"}\n            ry={\"1.947\"}\n          ></ellipse>\n\n          <ellipse\n            fillOpacity={\".64\"}\n            cx={\"185\"}\n            cy={\"15.576\"}\n            rx={\"6\"}\n            ry={\"5.841\"}\n          ></ellipse>\n        </g>\n\n        <circle\n          fill={\"url(#FftVK5nZ1a)\"}\n          cx={\"276\"}\n          cy={\"237\"}\n          r={\"200\"}\n        ></circle>\n      </g>\n    </svg>\n  )\n}\n\nexport default SphereIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: qsjy1QNDN9YtWHkz6hQyNv\n// Component: DJ3QnguB9Qnac\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport TextInput from \"../../TextInput\" // plasmic-import: rj77NDhjwwAh1v/component\nimport Button from \"../../Button\" // plasmic-import: 0ADYCztlr3EHXz/component\nimport { useScreenVariants as useScreenVariantskk9VbBCwbMaDgY } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: Kk9vbBCwbMADgY/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as plasmic_library_plasmic_color_type_css from \"../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css\" // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: qsjy1QNDN9YtWHkz6hQyNv/projectcss\nimport * as sty from \"./PlasmicHomeCta.module.css\" // plasmic-import: DJ3QnguB9Qnac/css\nimport SphereIcon from \"./icons/PlasmicIcon__Sphere\" // plasmic-import: UNIgCkS2hTaDOj/icon\n\nexport const PlasmicHomeCta__VariantProps = new Array()\n\nexport const PlasmicHomeCta__ArgProps = new Array()\n\nfunction PlasmicHomeCta__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskk9VbBCwbMaDgY(),\n  })\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        plasmic_library_plasmic_color_type_css.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__hkNge)}\n      >\n        <div\n          className={classNames(\n            projectcss.all,\n            projectcss.__wab_text,\n            sty.text___2Mh6H\n          )}\n        >\n          {\"Powering your business\"}\n        </div>\n\n        <div\n          className={classNames(\n            projectcss.all,\n            projectcss.__wab_text,\n            sty.text__sflJk\n          )}\n        >\n          {\n            \"Lorem ipsum dolor sit amet consectetur adipisicing elit nemo expedita voluptas culpa sapiente.\"\n          }\n        </div>\n\n        <p.Stack\n          as={\"div\"}\n          hasGap={true}\n          className={classNames(projectcss.all, sty.freeBox__gLkN)}\n        >\n          <TextInput\n            data-plasmic-name={\"textInput\"}\n            data-plasmic-override={overrides.textInput}\n            className={classNames(\"__wab_instance\", sty.textInput)}\n            color={\"dark\"}\n            placeholder={\"Your email...\"}\n          />\n\n          <Button\n            data-plasmic-name={\"button\"}\n            data-plasmic-override={overrides.button}\n            className={classNames(\"__wab_instance\", sty.button)}\n            color={\"blue\"}\n          >\n            {\"Subscribe\"}\n          </Button>\n        </p.Stack>\n\n        <div\n          className={classNames(\n            projectcss.all,\n            projectcss.__wab_text,\n            sty.text__c5WH\n          )}\n        >\n          {\"7 days free trial. No credit card required.\"}\n        </div>\n      </p.Stack>\n\n      {(hasVariant(globalVariants, \"screen\", \"mobile\") ? true : true) ? (\n        <div className={classNames(projectcss.all, sty.freeBox__naf9N)}>\n          <SphereIcon\n            data-plasmic-name={\"svg\"}\n            data-plasmic-override={overrides.svg}\n            className={classNames(projectcss.all, sty.svg)}\n            role={\"img\"}\n          />\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"textInput\", \"textbox\", \"button\", \"svg\"],\n  textInput: [\"textInput\", \"textbox\"],\n  button: [\"button\"],\n  svg: [\"svg\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHomeCta__ArgProps,\n      internalVariantPropNames: PlasmicHomeCta__VariantProps,\n    })\n\n    return PlasmicHomeCta__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHomeCta\"\n  } else {\n    func.displayName = `PlasmicHomeCta.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHomeCta = Object.assign(\n  // Top-level PlasmicHomeCta renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    textInput: makeNodeComponent(\"textInput\"),\n    button: makeNodeComponent(\"button\"),\n    svg: makeNodeComponent(\"svg\"),\n    // Metadata about props expected for PlasmicHomeCta\n    internalVariantProps: PlasmicHomeCta__VariantProps,\n    internalArgProps: PlasmicHomeCta__ArgProps,\n  }\n)\n\nexport default PlasmicHomeCta\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicHomeCta-module--button--Zk+Ni\";\nexport var freeBox__gLkN = \"PlasmicHomeCta-module--freeBox__gLkN--1DzHH\";\nexport var freeBox__hkNge = \"PlasmicHomeCta-module--freeBox__hkNge--mCYDJ\";\nexport var freeBox__naf9N = \"PlasmicHomeCta-module--freeBox__naf9N--YtYpN\";\nexport var root = \"PlasmicHomeCta-module--root--mVkRW\";\nexport var svg = \"PlasmicHomeCta-module--svg--djisT\";\nexport var svg___578Ce = \"PlasmicHomeCta-module--svg___578Ce--jVfqj\";\nexport var svg__bxvXo = \"PlasmicHomeCta-module--svg__bxvXo--IXR16\";\nexport var svg__judhT = \"PlasmicHomeCta-module--svg__judhT--+Ns4N\";\nexport var svg__ubQjX = \"PlasmicHomeCta-module--svg__ubQjX--DBRUh\";\nexport var textInput = \"PlasmicHomeCta-module--textInput--IXanu\";\nexport var text___2Mh6H = \"PlasmicHomeCta-module--text___2Mh6H--xb9+p\";\nexport var text__c5WH = \"PlasmicHomeCta-module--text__c5WH--7TYSk\";\nexport var text__sflJk = \"PlasmicHomeCta-module--text__sflJk--WOlMw\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHomeCta } from \"./plasmic/simple_light_landing_page/PlasmicHomeCta\"\n\nfunction HomeCta_(props, ref) {\n  // Use PlasmicHomeCta to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHomeCta are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HomeCtaProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHomeCta root={{ ref }} {...props} />\n}\n\nconst HomeCta = React.forwardRef(HomeCta_)\n\nexport default HomeCta\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: qsjy1QNDN9YtWHkz6hQyNv\n// Component: SKZU8nUhOvjKP5\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: v4jG8kQTLsahS/component\nimport Section from \"../../Section\" // plasmic-import: cl3lSb3Ph6uK45/component\nimport Bullet from \"../../Bullet\" // plasmic-import: Xz3qZuX73tHZGy/component\nimport Button from \"../../Button\" // plasmic-import: 0ADYCztlr3EHXz/component\nimport HomeCta from \"../../HomeCta\" // plasmic-import: DJ3QnguB9Qnac/component\nimport Footer from \"../../Footer\" // plasmic-import: _DEAkMPSWHhIX/component\nimport { useScreenVariants as useScreenVariantskk9VbBCwbMaDgY } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: Kk9vbBCwbMADgY/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as plasmic_library_plasmic_color_type_css from \"../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css\" // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: qsjy1QNDN9YtWHkz6hQyNv/projectcss\nimport * as sty from \"./PlasmicFeatures.module.css\" // plasmic-import: SKZU8nUhOvjKP5/css\nimport simpleProjectD7RrEiqYqlVnR9 from \"./images/simpleProject.png\" // plasmic-import: D7RrEIQYqlVnR9/picture\n\nexport const PlasmicFeatures__VariantProps = new Array()\n\nexport const PlasmicFeatures__ArgProps = new Array()\n\nfunction PlasmicFeatures__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskk9VbBCwbMaDgY(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <div\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            plasmic_library_plasmic_color_type_css.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <Section\n            data-plasmic-name={\"section\"}\n            data-plasmic-override={overrides.section}\n            className={classNames(\"__wab_instance\", sty.section)}\n            hasSubtitle={true}\n            hasTitle={true}\n            subtitle={\n              \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n            }\n            title={\"The ultimate in feature set.\"}\n          >\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox__fKlHc)}\n            >\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.columns__r4Xzp)}\n              >\n                <div className={classNames(projectcss.all, sty.column__bjwDs)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__uNgIk)}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__cumsz\n                      )}\n                    >\n                      {\"Powerful suite of tools\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__sZptF\n                      )}\n                    >\n                      {\n                        \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur.\"\n                      }\n                    </div>\n\n                    <Bullet\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.bullet___7DmiA\n                      )}\n                    />\n\n                    <Bullet\n                      className={classNames(\"__wab_instance\", sty.bullet__cl5)}\n                    />\n\n                    <Bullet\n                      className={classNames(\"__wab_instance\", sty.bullet__pxcn)}\n                    />\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__awFS\n                      )}\n                    >\n                      {\n                        \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur.\"\n                      }\n                    </div>\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(\n                        projectcss.all,\n                        sty.freeBox___1DlXd\n                      )}\n                    >\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__qLgYx\n                        )}\n                        color={\"blue\"}\n                      >\n                        {\"Start free trial\"}\n                      </Button>\n\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__tojgO\n                        )}\n                        color={\"outlineBlue\"}\n                      >\n                        {\"View demo\"}\n                      </Button>\n                    </p.Stack>\n                  </p.Stack>\n                </div>\n\n                <div className={classNames(projectcss.all, sty.column__w07Lx)}>\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__aIfO)}\n                    displayHeight={\"auto\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"100%\"}\n                    src={{\n                      src: simpleProjectD7RrEiqYqlVnR9,\n                      fullWidth: 1000,\n                      fullHeight: 924,\n                      aspectRatio: undefined,\n                    }}\n                  />\n                </div>\n              </p.Stack>\n\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.columns__c8Lgu)}\n              >\n                <div className={classNames(projectcss.all, sty.column___2Xr4D)}>\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__tBpK2)}\n                    displayHeight={\"auto\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"100%\"}\n                    src={{\n                      src: simpleProjectD7RrEiqYqlVnR9,\n                      fullWidth: 1000,\n                      fullHeight: 924,\n                      aspectRatio: undefined,\n                    }}\n                  />\n                </div>\n\n                <div className={classNames(projectcss.all, sty.column__fc02Q)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__aLJiU)}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__cfRgf\n                      )}\n                    >\n                      {\"Powerful suite of tools\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__zlS1T\n                      )}\n                    >\n                      {\n                        \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur.\"\n                      }\n                    </div>\n\n                    <Bullet\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.bullet__sTgry\n                      )}\n                    />\n\n                    <Bullet\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.bullet__aRdW3\n                      )}\n                    />\n\n                    <Bullet\n                      className={classNames(\"__wab_instance\", sty.bullet__y5Uf)}\n                    />\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__qnqAj\n                      )}\n                    >\n                      {\n                        \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur.\"\n                      }\n                    </div>\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__tFbXt)}\n                    >\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__lmSu1\n                        )}\n                        color={\"blue\"}\n                      >\n                        {\"Start free trial\"}\n                      </Button>\n\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__masAx\n                        )}\n                        color={\"outlineBlue\"}\n                      >\n                        {\"View demo\"}\n                      </Button>\n                    </p.Stack>\n                  </p.Stack>\n                </div>\n              </p.Stack>\n            </p.Stack>\n          </Section>\n\n          <HomeCta\n            data-plasmic-name={\"homeCta\"}\n            data-plasmic-override={overrides.homeCta}\n            className={classNames(\"__wab_instance\", sty.homeCta)}\n          />\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"header\", \"section\", \"homeCta\", \"footer\"],\n  header: [\"header\"],\n  section: [\"section\"],\n  homeCta: [\"homeCta\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicFeatures__ArgProps,\n      internalVariantPropNames: PlasmicFeatures__VariantProps,\n    })\n\n    return PlasmicFeatures__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicFeatures\"\n  } else {\n    func.displayName = `PlasmicFeatures.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicFeatures = Object.assign(\n  // Top-level PlasmicFeatures renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    section: makeNodeComponent(\"section\"),\n    homeCta: makeNodeComponent(\"homeCta\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicFeatures\n    internalVariantProps: PlasmicFeatures__VariantProps,\n    internalArgProps: PlasmicFeatures__ArgProps,\n  }\n)\n\nexport default PlasmicFeatures\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicFeatures-module--__wab_img-spacer--cAXe7\";\nexport var bullet___7DmiA = \"PlasmicFeatures-module--bullet___7DmiA--fjjB5\";\nexport var bullet__aRdW3 = \"PlasmicFeatures-module--bullet__aRdW3--9QrgG\";\nexport var bullet__cl5 = \"PlasmicFeatures-module--bullet__cl5--GWiyQ\";\nexport var bullet__pxcn = \"PlasmicFeatures-module--bullet__pxcn--kGxMK\";\nexport var bullet__sTgry = \"PlasmicFeatures-module--bullet__sTgry--yDf-t\";\nexport var bullet__y5Uf = \"PlasmicFeatures-module--bullet__y5Uf--428ei\";\nexport var button__lmSu1 = \"PlasmicFeatures-module--button__lmSu1--qz-0A\";\nexport var button__masAx = \"PlasmicFeatures-module--button__masAx--S-6rG\";\nexport var button__qLgYx = \"PlasmicFeatures-module--button__qLgYx--bCCz5\";\nexport var button__tojgO = \"PlasmicFeatures-module--button__tojgO--b5mmj\";\nexport var column___2Xr4D = \"PlasmicFeatures-module--column___2Xr4D--Q6gwd\";\nexport var column__bjwDs = \"PlasmicFeatures-module--column__bjwDs--ixGDK\";\nexport var column__fc02Q = \"PlasmicFeatures-module--column__fc02Q--QOMuY\";\nexport var column__w07Lx = \"PlasmicFeatures-module--column__w07Lx--mp0Pf\";\nexport var columns__c8Lgu = \"PlasmicFeatures-module--columns__c8Lgu--3We2i\";\nexport var columns__r4Xzp = \"PlasmicFeatures-module--columns__r4Xzp--e-f9B\";\nexport var footer = \"PlasmicFeatures-module--footer--YayiD\";\nexport var freeBox___1DlXd = \"PlasmicFeatures-module--freeBox___1DlXd--jwesv\";\nexport var freeBox__aLJiU = \"PlasmicFeatures-module--freeBox__aLJiU--muLaJ\";\nexport var freeBox__fKlHc = \"PlasmicFeatures-module--freeBox__fKlHc--R3GsN\";\nexport var freeBox__tFbXt = \"PlasmicFeatures-module--freeBox__tFbXt--DM4A1\";\nexport var freeBox__uNgIk = \"PlasmicFeatures-module--freeBox__uNgIk--MYz9P\";\nexport var header = \"PlasmicFeatures-module--header--dBibA\";\nexport var homeCta = \"PlasmicFeatures-module--homeCta--mXND7\";\nexport var img__aIfO = \"PlasmicFeatures-module--img__aIfO--E-QUi\";\nexport var img__tBpK2 = \"PlasmicFeatures-module--img__tBpK2--mGu4b\";\nexport var root = \"PlasmicFeatures-module--root--uNwFX\";\nexport var section = \"PlasmicFeatures-module--section--lyZUa\";\nexport var svg__am4Hd = \"PlasmicFeatures-module--svg__am4Hd--N3Ud2\";\nexport var svg__nozVv = \"PlasmicFeatures-module--svg__nozVv--S3IHQ\";\nexport var svg__o1Ael = \"PlasmicFeatures-module--svg__o1Ael--Ljh1z\";\nexport var svg__ow6IR = \"PlasmicFeatures-module--svg__ow6IR--Lj7ce\";\nexport var svg__sn4Wf = \"PlasmicFeatures-module--svg__sn4Wf--24JR5\";\nexport var svg__tNyB0 = \"PlasmicFeatures-module--svg__tNyB0--L9hx9\";\nexport var svg__yRuq = \"PlasmicFeatures-module--svg__yRuq--RjKWK\";\nexport var svg__zirSt = \"PlasmicFeatures-module--svg__zirSt--pV5wF\";\nexport var text__awFS = \"PlasmicFeatures-module--text__awFS--szjeD\";\nexport var text__cfRgf = \"PlasmicFeatures-module--text__cfRgf--QBOjK\";\nexport var text__cumsz = \"PlasmicFeatures-module--text__cumsz--hdwSr\";\nexport var text__qnqAj = \"PlasmicFeatures-module--text__qnqAj--7VLIX\";\nexport var text__sZptF = \"PlasmicFeatures-module--text__sZptF--ZJ9UX\";\nexport var text__zlS1T = \"PlasmicFeatures-module--text__zlS1T--3Jrvg\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicFeatures } from \"../components/plasmic/simple_light_landing_page/PlasmicFeatures\"\n\nfunction Features() {\n  // Use PlasmicFeatures to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicFeatures are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicFeatures is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicFeatures />\n}\n\nexport default Features\n","export default __webpack_public_path__ + \"static/simpleProject-69c5091d6233e25e8ef6cb029da8bb65.png\";"],"names":["props","className","style","title","restProps","xmlns","viewBox","height","width","fill","classNames","d","PlasmicBullet__VariantProps","Array","PlasmicBullet__ArgProps","PlasmicDescendants","root","svg","makeNodeComponent","nodeName","func","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","as","hasGap","projectcss","plasmic_library_plasmic_color_type_css","role","p","defaultContents","value","children","PlasmicBullet__RenderFunc","displayName","PlasmicBullet","Object","assign","internalVariantProps","internalArgProps","Bullet_","ref","React","cx","cy","fx","fy","r","id","stopColor","offset","fillRule","fillOpacity","rx","ry","PlasmicHomeCta__VariantProps","PlasmicHomeCta__ArgProps","textInput","button","globalVariants","ensureGlobalVariants","screen","useScreenVariantskk9VbBCwbMaDgY","TextInput","color","placeholder","Button","hasVariant","PlasmicHomeCta__RenderFunc","PlasmicHomeCta","HomeCta_","PlasmicFeatures__VariantProps","PlasmicFeatures__ArgProps","header","section","homeCta","footer","Header","Section","hasSubtitle","hasTitle","subtitle","Bullet","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","src","simpleProjectD7RrEiqYqlVnR9","fullWidth","fullHeight","aspectRatio","undefined","HomeCta","Footer","PlasmicFeatures__RenderFunc","PlasmicFeatures"],"sourceRoot":""}